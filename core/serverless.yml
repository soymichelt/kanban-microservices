app: soymichel-dev
service: core

package:
  individually: true

plugins:
  - serverless-esbuild
  - serverless-offline

custom:
  constants: ${file(./../env.yml):constants}
  environment: ${file(./../env.yml):${opt:stage}}
  localConstants: ${file(./env.yml):constants}
  localEnvironment: ${file(./env.yml):${opt:stage}}

provider:
  name: aws
  deploymentMethod: direct
  runtime: nodejs18.x
  timeout: 29
  region: ${self:custom.constants.REGION}
  stage: ${opt:stage}
  endpointType: REGIONAL
  environment:
    APP: ${self:app}
    SERVICE: ${self:service}
    LAMBDA_TIMEOUT: ${self:provider.timeout}
    PACKAGE: ${file(./package.json):name}
    REGION: ${self:provider.region}
    STAGE: ${opt:stage}
    VERSION: ${file(./package.json):version}
    EVENT_BUS_VERSION: ${self:custom.localConstants.EVENT_BUS_VERSION}
  stackPolicy:
    - Effect: Allow
      Principal: '*'
      Action:
        - Update:*
      Resource: '*'
    # **NOTE**: Define deny policy to avoid deleting
    # important resources. Example: databases or other
    # data or file storage resources.
    #
    # YAML eample:
    #
    # - Effect: Deny
    #   Principal: '*'
    #   Action:
    #     - Update:Replace
    #     - Update:Delete
    #   Resource:
    #     - RDS | DynamoDB | S3
    #   ResourceType:
    #     - AWS::RDS::DBInstance
    #     - AWS::DynamoDB::Table
    #     - AWS::S3::Bucket
  httpApi:
    id:
      Fn::ImportValue: '${self:service}-CoreApiGatewayV2-ApiId'
    name: CoreApi
    metrics: true

functions:
  - ${file(src/services/ping/infrastructure/functions/functions.yml)}

resources:
  - ${file(cloud-config/iamRoles.yml)}
  - ${file(cloud-config/iamUsers.yml)}
  - ${file(cloud-config/iamPolicies.yml)}
  - ${file(cloud-config/apiGateway.yml)}
  - ${file(cloud-config/eventBusSns.yml)}
